<snippet>
   <description>UVM Test</description>
   <content><![CDATA[class ${1:${TM_FILENAME/(.+)\..+|.*/$1/:name}} extends ${2:/*base class*/};
    `uvm_component_utils_begin(${1})
    `uvm_component_utils_end

    extern function new(string name="${1}", uvm_component parent = null);
    extern virtual function void build_phase(uvm_phase phase);
    extern virtual function void end_of_elaboration_phase(uvm_phase phase);
    extern virtual task run_phase(uvm_phase phase);
    extern virtual function void extract_phase(uvm_phase phase);
    extern virtual function void report_phase(uvm_phase phase);

endclass : ${1}

//------------------------------------------------------------------------------
// Constructor
//------------------------------------------------------------------------------
    function ${1}::new(string name = "${1}", uvm_component parent = null);
        super.new(name, parent);
    endfunction : new

//------------------------------------------------------------------------------
// build_phase
//------------------------------------------------------------------------------
    function void ${1}::build_phase(uvm_phase phase);
        super.build_phase(phase);
    endfunction : build_phase

//------------------------------------------------------------------------------
// end_of_elaboration_phase
//------------------------------------------------------------------------------
    function void ${1}::end_of_elaboration_phase(uvm_phase phase);
        super.end_of_elaboration_phase(phase);
    endfunction : end_of_elaboration_phase

//------------------------------------------------------------------------------
// run_phase
//------------------------------------------------------------------------------
    task ${1}::run_phase(uvm_phase phase);

        phase.raise_objection(this, "Starting run phase...");
        super.run_phase(phase);

        // TODO : implement run phase
        ${3}

        phase.drop_objection(this);

    endtask : run_phase

//------------------------------------------------------------------------------
// extract_phase
//------------------------------------------------------------------------------
    function void ${1}::extract_phase(uvm_phase phase);
        super.extract_phase(phase);
    endfunction : extract_phase

//------------------------------------------------------------------------------
// report_phase
//------------------------------------------------------------------------------
    function void ${1}::report_phase(uvm_phase phase);
        super.report_phase(phase);
    endfunction : report_phase]]></content>
    <tabTrigger>test</tabTrigger>
    <scope>source.systemverilog</scope>
</snippet>